template header
    occupancyMin
    occupancyMax
    priceIncrease

package com.example.pricing;
import com.ftn.sbnz.model.core.visitor.VisitorEntity;
import com.ftn.sbnz.model.event.EventEntity;
import com.ftn.sbnz.model.event.EventPurchaseEntity;

template "EventOccupancyPriceIncrease"

rule "Price increase for capacity @{occupancyMin} to @{occupancyMax} and price increase of @{priceIncrease}"
    when
        $visitor : VisitorEntity()
        $event : EventEntity((totalSeats - numberOfAvailableSeats) / totalSeats > @{occupancyMin}, (totalSeats - numberOfAvailableSeats) / totalSeats <= @{occupancyMax})
        $purchase : EventPurchaseEntity(event == $event, visitor == $visitor)
    then
        System.out.println("IDE GAS" + ($event.getTotalSeats() - $event.getNumberOfAvailableSeats()) / $event.getTotalSeats());
        $purchase.setPurchasePrice($purchase.getPurchasePrice() * (1 + @{priceIncrease}));
        System.out.println("IDE GASSS" + (1 + @{priceIncrease}));
end
end template
