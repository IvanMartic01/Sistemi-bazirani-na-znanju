package event_rules;

import com.ftn.sbnz.model.event.EventEntity;
import com.ftn.sbnz.model.event.EventType;

import com.ftn.sbnz.model.core.visitor.VisitorEntity;
import com.ftn.sbnz.model.core.visitor.VisitorEventPreference;

import java.util.List;

rule "outdoor_events"
    when
        $visitor : VisitorEntity(preferences not contains VisitorEventPreference.OUTDOOR_EVENTS)
        $event : EventEntity(type == EventType.HIKING || type == EventType.CYCLING || type == EventType.PICNIC)
    then
        delete($event);
end

rule "culture_events"
    when
        $visitor : VisitorEntity(preferences not contains VisitorEventPreference.CULTURAL_EVENTS)
        $event : EventEntity(type == EventType.MUSEUM_VISIT || type == EventType.GALLERY_VISIT || type == EventType.CONCERT)
    then
        delete($event);
end

rule "family_events"
    when
        $visitor : VisitorEntity(preferences not contains VisitorEventPreference.FAMILY_EVENTS)
        $event : EventEntity(type == EventType.ZOO_VISIT || type == EventType.AQUARIUM_VISIT || type == EventType.THEME_PARK_VISIT)
    then
        delete($event);
end

rule "sporting_events"
    when
        $visitor : VisitorEntity(preferences not contains VisitorEventPreference.SPORTING_EVENTS)
        $event : EventEntity(type == EventType.BASKETBALL_GAME || type == EventType.FOOTBALL_MATCH || type == EventType.BOXING_MATCH)
    then
        delete($event);
end

rule "relaxing_events"
    when
        $visitor : VisitorEntity(preferences not contains VisitorEventPreference.RELAXING_EVENTS)
        $event : EventEntity(type == EventType.WELLNESS_CENTER || type == EventType.SPA_TREATMENT || type == EventType.SPA_VISIT)
    then
        delete($event);
end

